module GeneratePropositionalLogicXtext

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.generator.*
import org.eclipse.xtext.ui.generator.*

var grammarURI = "classpath:/org/foam/xtext/plogic/PropositionalLogicXtext.xtext"
var fileExtensions = "plogic"
var projectName = "org.foam.xtext.plogic"
var runtimeProject = "../${projectName}"
var encoding = "UTF-8"

Workflow {
	bean = StandaloneSetup {
		scanClassPath  = true
		platformUri = "${runtimeProject}/.."
		
		registerGeneratedEPackage = "org.foam.propositionallogic.PropositionallogicPackage"
		registerEcoreFile = "platform:/resource/org.foam.models/models/propositionallogic.ecore"
		registerGenModelFile = "platform:/resource/org.foam.models/models/propositionallogic.genmodel"
	}

	component = DirectoryCleaner {
		directory = "${runtimeProject}/src-gen"
	}
	
	component = DirectoryCleaner {
    	directory = "${runtimeProject}/model/generated"
    }
    
    component = DirectoryCleaner {
    	directory = "${runtimeProject}/src/org/foam/xtext/plogic"
		exclude = "GeneratePropositionalLogicXtext.mwe2"
		exclude = "PropositionalLogicXtext.xtext"		
    }

	// copy dummy MANIFEST.MF which doesn't import any dependencies 
	component = FileCopy {
		sourceFile = "${runtimeProject}/META-INF/_MANIFEST.MF"
		targetFile = "${runtimeProject}/META-INF/MANIFEST.MF"
	}

	component = Generator {
		pathRtProject = runtimeProject
		projectNameRt = projectName
		encoding = encoding
		language = {
			uri = grammarURI

			// Java API to access grammar elements (required by several other fragments)
			fragment = grammarAccess.GrammarAccessFragment {}
			
			// generates Java API for the generated EPackages
			fragment = ecore.EMFGeneratorFragment {}

			// the Antlr parser
			fragment = parser.antlr.XtextAntlrGeneratorFragment {}
		}
	}
	
	// copy dummy MANIFEST.MF over generated one, this step is not needed
	// but prevents error in eclipse 
	component = FileCopy {
		sourceFile = "${runtimeProject}/META-INF/_MANIFEST.MF"
		targetFile = "${runtimeProject}/META-INF/MANIFEST.MF"
	}
}
